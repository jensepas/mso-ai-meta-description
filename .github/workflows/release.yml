name: Build and Create Release

on:
  push:
    tags:
      - 'v*' # Déclenche uniquement sur les tags commençant par "v"

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifiez le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Installez Node.js et les dépendances
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Remplacez par la version de Node.js utilisée dans votre projet

      - name: Install dependencies
        run: npm install

      # Étape 3 : Exécuter le build Gulp
      - name: Run Gulp Build
        run: npx gulp --gulpfile gulpfile.cjs

      # Étape 4 : Copier les fichiers générés par Gulp dans `src/assets`
      - name: Copy Gulp Build to src/assets
        run: |
          # Crée les répertoires si nécessaire
          mkdir -p src/assets/css src/assets/js

          # Copier les fichiers CSS dans src/assets/css
          cp dist/css/*.css src/assets/css/ || echo "No CSS files to copy"

          # Copier les fichiers JS dans src/assets/js
          cp dist/js/*.js src/assets/js/ || echo "No JS files to copy"

      # Étape 5 : Créez une release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # Utilise le tag qui a déclenché le workflow
          release_name: Release ${{ github.ref_name }}
          body: |
            Cette release contient les fichiers du dossier `src`, avec les fichiers générés par Gulp copiés dans `src/assets`.
          draft: false
          prerelease: false

      # Étape 6 : Ajouter tous les fichiers du répertoire src dans la release
      - name: Zip Source Files (src/)
        run: zip -r src-files.zip ./src

      - name: Attach Source Files to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src-files.zip
          asset_name: src-files.zip
          asset_content_type: application/zip